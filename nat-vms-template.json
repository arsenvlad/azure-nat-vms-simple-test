{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2"
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "adminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "numNatVms": 2,
    "numClientVms": 1,
    "externalNsgName": "[concat(parameters('prefix'), '-external-nsg')]",
    "clientSubnetRouteTableName": "[concat(parameters('prefix'), '-client-routetable')]",
    "bastionPublicIPAddressName": "[concat(parameters('prefix'), '-bastion-pip')]",
    "bastionName": "[concat(parameters('prefix'), '-bastion')]",
    "vnetName": "[concat(parameters('prefix'), '-vnet')]",
    "vnetAddressSpace": "10.100.0.0/16",
    "bastionSubnetName": "AzureBastionSubnet",
    "externalNvaSubnetName": "external-nva-subnet",
    "internalNvaSubnetName": "internal-nva-subnet",
    "clientSubnetName": "client-subnet",
    "bastionSubnetAddressSpace": "10.100.253.0/27",
    "externalNvaSubnetAddressSpace": "10.100.1.0/24",
    "internalNvaSubnetAddressSpace": "10.100.2.0/24",
    "clientSubnetAddressSpace": "10.100.3.0/24",
    "nvaHAILBStaticIP": "10.100.2.4",
    "nvaHAILBName": "[concat(parameters('prefix'), '-nva-ilb')]",
    "bastionSubnetResourceId": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName')), '/subnets/', variables('bastionSubnetName'))]",
    "externalNvaSubnetResourceId": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName')), '/subnets/', variables('externalNvaSubnetName'))]",
    "internalNvaSubnetResourceId": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName')), '/subnets/', variables('internalNvaSubnetName'))]",
    "clientSubnetResourceId": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName')), '/subnets/', variables('clientSubnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-04-01",
      "name": "[concat(parameters('prefix'), '-pip', copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "natPublicIpCopy",
        "count": "[variables('numNatVms')]"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('prefix'), '-', copyIndex(), '-', uniqueString(resourceGroup().id))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-04-01",
      "name": "[variables('externalNsgName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2020-04-01",
      "name": "[variables('clientSubnetRouteTableName')]",
      "location": "[variables('location')]",
      "properties": {
        "routes": [
          {
            "name": "to_internet",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('nvaHAILBStaticIP')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-04-01",
      "name": "[variables('vnetName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('externalNsgName'))]",
        "[concat('Microsoft.Network/routeTables/', variables('clientSubnetRouteTableName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('bastionSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('bastionSubnetAddressSpace')]"
            }
          },
          {
            "name": "[variables('externalNvaSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('externalNvaSubnetAddressSpace')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('externalNsgName'))]"
              }
            }
          },
          {
            "name": "[variables('internalNvaSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('internalNvaSubnetAddressSpace')]"
            }
          },
          {
            "name": "[variables('clientSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('clientSubnetAddressSpace')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('clientSubnetRouteTableName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-04-01",
      "name": "[variables('bastionPublicIPAddressName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2020-04-01",
      "name": "[variables('bastionName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "properties": {
        "dnsName": "bst-cbf49d63-3490-4591-916c-aeb6d2266a60.bastion.azure.com",
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('bastionSubnetResourceId')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2020-04-01",
      "name": "[variables('nvaHAILBName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "frontend",
            "properties": {
              "subnet": {
                "id": "[variables('internalNvaSubnetResourceId')]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('nvaHAILBStaticIP')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "natVms"
          }
        ],
        "probes": [
          {
            "name": "tcp_probe",
            "properties": {
              "protocol": "Tcp",
              "port": 22,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "HAPortsRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('nvaHAILBName'), 'frontend')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('nvaHAILBName'), 'natVms')]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('nvaHAILBName'), 'tcp_probe')]"
              },
              "protocol": "All",
              "frontendPort": 0,
              "backendPort": 0
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-04-01",
      "name": "[concat(parameters('prefix'), '-nat-external-nic', copyIndex())]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', concat(parameters('prefix'), '-pip', copyIndex()))]"
      ],
      "copy": {
        "name": "natExternalNicCopy",
        "count": "[variables('numNatVms')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "external",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('externalNvaSubnetResourceId')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('prefix'), '-pip', copyIndex()))]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "enableAcceleratedNetworking": true
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-04-01",
      "name": "[concat(parameters('prefix'), '-nat-internal-nic', copyIndex())]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('nvaHAILBName'))]"
      ],
      "copy": {
        "name": "natInternalNicCopy",
        "count": "[variables('numNatVms')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "internal",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('internalNvaSubnetResourceId')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('nvaHAILBName')), '/backendAddressPools/natVms')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true,
        "enableAcceleratedNetworking": true
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-04-01",
      "name": "[concat(parameters('prefix'), '-client-nic', copyIndex())]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "copy": {
        "name": "clientNicCopy",
        "count": "[variables('numClientVms')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "primary",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('clientSubnetResourceId')]"
              }
            }
          }
        ],
        "enableIPForwarding": false,
        "enableAcceleratedNetworking": true
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2019-07-01",
      "name": "[concat(parameters('prefix'), '-nat-as')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 20
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "name": "[concat(parameters('prefix'), '-nat-vm', copyIndex())]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('prefix'), '-nat-external-nic', copyIndex()))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('prefix'), '-nat-internal-nic', copyIndex()))]",
        "[concat('Microsoft.Compute/availabilitySets/', concat(parameters('prefix'), '-nat-as'))]"
      ],
      "copy": {
        "name": "natVmCopy",
        "count": "[variables('numNatVms')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('prefix'), '-nat-as'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('prefix'), '-nat-vm', copyIndex())]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
          ]
        },
        "osProfile": {
          "computerName": "[concat(parameters('prefix'), '-nat-vm', copyIndex())]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('prefix'), '-nat-external-nic', copyIndex()))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('prefix'), '-nat-internal-nic', copyIndex()))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "name": "[concat(parameters('prefix'), '-client-vm', copyIndex())]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('prefix'), '-client-nic', copyIndex()))]"
      ],
      "copy": {
        "name": "clientVmCopy",
        "count": "[variables('numClientVms')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('prefix'), '-client-vm', copyIndex())]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
          ]
        },
        "osProfile": {
          "computerName": "[concat(parameters('prefix'), '-client-vm', copyIndex())]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('prefix'), '-client-nic', copyIndex()))]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      }
    }
  ]
}
